name: Version Bump

on:
  push:
    branches:
      - develop
      - main

jobs:
  version-bump:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4  # Updated to the latest version

    - name: Set up Node.js
      uses: actions/setup-node@v3  # Updated to the latest version
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Configure Git identity
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Determine release type
      id: version
      run: |
        if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
          echo "type=prerelease" >> $GITHUB_ENV
        else
          echo "type=release" >> $GITHUB_ENV
      # Now using ${{ env.type }} for conditional steps

    - name: Run standard-version for beta (develop branch)
      if: env.type == 'prerelease'
      id: prerelease
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        npm run prerelease
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "changed=$( [ \"$CURRENT_VERSION\" != \"$NEW_VERSION\" ] && echo true || echo false )" >> $GITHUB_ENV

    - name: Run standard-version for release (main branch)
      if: env.type == 'release'
      id: release
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        npm run release
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "changed=$( [ \"$CURRENT_VERSION\" != \"$NEW_VERSION\" ] && echo true || echo false )" >> $GITHUB_ENV

    - name: Push tags only
      if: env.changed == 'true'
      run: |
        git push origin "v$(cat package.json | jq -r .version)"

    - name: Create a pull request for develop branch
      if: env.changed == 'true' && env.type == 'prerelease'
      uses: peter-evans/create-pull-request@v4
      with:
        branch: develop
        commit-message: "chore(release): ${{ env.NEW_VERSION }}"
        title: "chore(release): ${{ env.NEW_VERSION }}"
        body: "Automated release for version ${{ env.NEW_VERSION }}"
        labels: "automated release"

    - name: Create Release
      if: env.changed == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v$(cat package.json | jq -r .version)"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
