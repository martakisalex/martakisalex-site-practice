name: Version Bump on Feature Branches

on:
  push:
    branches-ignore:
      - main
      - develop

jobs:
  version_bump:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Determine Version Suffix
        id: version_suffix
        run: |
          # Check if merging to develop; if so, add -beta suffix
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            # Extract the current version number from package.json
            VERSION=$(jq -r '.version' package.json | sed 's/-beta.*//')
            # Get latest beta version by counting existing beta tags
            LATEST_BETA=$(git tag --list "${VERSION}-beta.*" | wc -l)
            # Increment beta version
            echo "VERSION_SUFFIX=-beta.$((LATEST_BETA + 1))" >> $GITHUB_ENV
          else
            echo "VERSION_SUFFIX=" >> $GITHUB_ENV
          fi

      - name: Determine Version Bump Type
        id: bump_type
        run: |
          # Determine version bump type based on branch name
          if [[ "${GITHUB_REF##*/}" == major:* ]]; then
            echo "BUMP_TYPE=major" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF##*/}" == feat:* ]]; then
            echo "BUMP_TYPE=minor" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF##*/}" == fix:* ]]; then
            echo "BUMP_TYPE=patch" >> $GITHUB_ENV
          else
            echo "BUMP_TYPE=patch" >> $GITHUB_ENV # default to patch if no specific prefix
          fi

      - name: Bump Version with Suffix
        if: startsWith(github.ref, 'refs/heads/feature/')
        run: |
          # Apply version bump with beta suffix if defined
          npm version ${{ env.BUMP_TYPE }} --no-git-tag-version
          VERSION=$(jq -r '.version' package.json)
          UPDATED_VERSION="${VERSION}${{ env.VERSION_SUFFIX }}"
          # Update package.json with the new version
          jq ".version = \"$UPDATED_VERSION\"" package.json > tmp.$$.json && mv tmp.$$.json package.json
          git add package.json package-lock.json
          git commit -m "Bump version to ${UPDATED_VERSION}"
          git push origin HEAD

      - name: Build and Test
        run: npm run build && npm test
