name: Version Check Test

on:
  pull_request:
    branches:
      - develop
      - main

jobs:
  check-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch full history for accurate diff detection

      - name: Get base branch version of package.json
        id: base_version
        run: |
          # Fetch the base branch and save the version from package.json
          git fetch origin ${{ github.base_ref }}:$GITHUB_BASE_REF
          BASE_VERSION=$(jq -r '.version' <(git show $GITHUB_BASE_REF:package.json))
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV

      - name: Get PR branch version of package.json
        id: pr_version
        run: |
          PR_VERSION=$(jq -r '.version' package.json)
          echo "PR_VERSION=$PR_VERSION" >> $GITHUB_ENV

      - name: Check if package.json version was incremented
        run: |
          if [ "$PR_VERSION" == "$BASE_VERSION" ]; then
            echo "Error: package.json version has not been incremented." && exit 1
          else
            echo "Check passed: package.json version has been incremented."
          fi

      - name: Check for package.json and package-lock.json consistency
        run: |
          PACKAGE_CHANGED=$(git diff --name-only origin/${{ github.base_ref }} HEAD | grep -q "package.json" && echo "true" || echo "false")
          LOCK_CHANGED=$(git diff --name-only origin/${{ github.base_ref }} HEAD | grep -q "package-lock.json" && echo "true" || echo "false")

          if [ "$PACKAGE_CHANGED" = "true" ] && [ "$LOCK_CHANGED" = "false" ]; then
            echo "Error: package-lock.json must be updated whenever package.json is modified." && exit 1
          elif [ "$PACKAGE_CHANGED" = "false" ] && [ "$LOCK_CHANGED" = "true" ]; then
            echo "Error: package.json should also be updated if package-lock.json changes." && exit 1
          else
            echo "Check passed: package.json and package-lock.json are in sync."
          fi
